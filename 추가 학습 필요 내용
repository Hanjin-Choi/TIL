#240118
a_condition = False
if not a_condition:
    # if not False 구조
---------------
lambda 예제
number_of_people = 0
number_of_book = 100

def increase_user():
    global number_of_people
    number_of_people += 1

name = ['김시습', '허균', '남영로', '임제', '박지원']
age = [20, 16, 52, 36, 60]
address = ['서울', '강릉', '조선', '나주', '한성부']


def create_user(name, age, address):
    increase_user()
    user_info ={}
    user_info['name'] = name
    user_info['age'] = age
    user_info['address'] = address
    print(f'{name}님 환영합니다!')
    return user_info

many_user = list(map(lambda x,y,z : create_user(x,y,z), name, age, address))
info = dict(map(lambda x : (x['name'], x['age']), many_user))
def decrease_book(number):
    global number_of_book
    number_of_book -= number
    print(f'남은 책의 수 : {number_of_book}')

def rental_book(info):
    name_list, age_list = map()
    
    
    for name, age in info.items():
        number =  age // 10
        decrease_book(number)
        print(f'{name}님이 {number}권의 책을 대여하였습니다.')

rental_book(info)
--------------
json
response  - 네트워크 공부 필요
API 통신

pip가 무엇인가

from pprint import pprint as print

-------ws_4_b
print(f'{food['이름']}') 
SyntaxError: f-string: unmatched '['
해결책 :     print(f"{food['이름']}")
https://realpython.com/python-f-strings/
-------

'''
B 형 설명회
삼성전자에서 나눈 등급
im advanced professional expert
sw 적성진단에서 두문제를 다풀면 advanced
trial&error 방식으로 문제를 푸는 경우가 제일 안좋은 습관

에러 없이 시물레이션 문제를 한번에 푸는 방법을 생각하는게 좋다

자료구조와 알고리즘을 잘써야 실력이 잘 증가함
프로페셔널이 엑스퍼트와 같이 시험봐서 엑스퍼트와 같은 성적을 갖으면 됨.

B형은 google amazon정도는 충분히 감
'''

# 240119
sys.stdin.readline()이 더 빠른 이유
context switching때문일거다??? 이건 OS관련된 이내용을 공부하면서 알아보자


if censored_user_list.get("name"): # dictionary 형태의 데이터에서 키를 통해 데이터가 없으면 None출력 = False로 암시적 형변환이 일어남

for 문으로 dictionary를 만드는 방법
    
L=list(map(lambda x,y : x+y,range(1,5),range(5))) # zip과 비슷하게 동작함, 패킹을 제일 적은 인자수에 맞춰서 묶음 나머지는 버림

dict('a':1,'b':2,'c':1)
1 in dict # False

함수에 리턴값을 설정안하면 None을 리턴

dict
L=[]
a= [1,2,3,4,5]
while a: # 리스트안의 요소가 사라지면 false
    b= a.pop()
    if a%2 ==1:
        L.extend(a)

for item in convi:
    # result.append([]).extend(item) 리스트가 없을 경우 사용방법
    if item in result:
        result[item].append(item)
    else:


------------------------
# 개인공부시 유익한 인강
https://www.inflearn.com/course/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8#curriculum



# 240130

unpacking
temp = [1,2,3,4,5,6]
print(*temp) # 1 2 3 4 5 6
print('a','b',sep = " ")

